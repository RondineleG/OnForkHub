let t = null;
async function f(n) {
  try {
    t = new WebTorrent(), n.textContent = "Ready to play";
  } catch (l) {
    throw l;
  }
}
async function y(n, l, c) {
  try {
    t || (t = new WebTorrent());
    const r = document.querySelector(l), o = document.createElement("video");
    o.controls = !0, o.style.width = "100%", o.style.height = "100%", o.style.backgroundColor = "#000", r.innerHTML = "", r.appendChild(o), t.add(c, { announce: ["wss://tracker.webtorrent.io"] }, (i) => {
      const s = i.files.find((e) => /\.(mp4|mkv|webm)$/i.test(e.name));
      if (!s)
        throw new Error("No video file found in torrent");
      s.getBlobURL((e, d) => {
        if (e) throw e;
        o.src = d, o.play();
      });
      let a = 0;
      i.on("download", () => {
        const e = Math.floor(i.progress * 100);
        e > a && (a = e, n.textContent = `Downloading: ${e}%`);
      }), i.on("done", () => {
        n.textContent = "Download complete";
      });
    });
  } catch (r) {
    throw r;
  }
}
async function u() {
  t && await new Promise((n) => {
    t.destroy(() => {
      t = new WebTorrent(), n();
    });
  });
}
export {
  f as initTorrentPlayer,
  y as startDownload,
  u as stopDownload
};
