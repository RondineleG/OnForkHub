let o = null;
async function i(t) {
  try {
    o = new WebTorrent(), t.textContent = "Ready to play";
  } catch (a) {
    throw a;
  }
}
async function d(t, a, l) {
  try {
    o || (o = new WebTorrent());
    const r = document.querySelector(a), e = document.createElement("video");
    e.controls = !0, e.style.width = "100%", e.style.height = "100%", e.style.backgroundColor = "#000", r.innerHTML = "", r.appendChild(e), o.add(l, {
      announce: [
        "wss://tracker.btorrent.xyz",
        "wss://tracker.openwebtorrent.com",
        "wss://tracker.fastcast.nz"
      ]
    }, (n) => {
      const s = n.files.find((c) => /\.(mp4|mkv|webm)$/i.test(c.name));
      if (!s)
        throw new Error("No video file found");
      s.renderTo(e, {
        autoplay: !0,
        muted: !1
      }), n.on("download", () => {
        const c = Math.floor(n.progress * 100);
        t.textContent = `Downloading: ${c}%`, n.progress > 0.01 && e.paused && e.play().catch(console.error);
      }), n.on("done", () => {
        t.textContent = "Download complete";
      });
    });
  } catch (r) {
    throw r;
  }
}
async function w() {
  o && await new Promise((t) => {
    o.destroy(() => {
      o = new WebTorrent(), t();
    });
  });
}
export {
  i as initTorrentPlayer,
  d as startDownload,
  w as stopDownload
};
