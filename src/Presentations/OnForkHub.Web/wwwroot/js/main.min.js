let o = null;
async function d(r) {
  try {
    o = new WebTorrent(), r.textContent = "WebTorrent initialized successfully";
  } catch (t) {
    throw console.error("Error initializing WebTorrent:", t), t;
  }
}
async function l(r, t, s) {
  try {
    o || (o = new WebTorrent());
    const n = document.querySelector(t);
    if (!n) throw new Error("Video container not found");
    n.innerHTML = '<video controls style="width: 100%; height: 100%;"></video>';
    const a = n.querySelector("video");
    o.add(s, {
      announce: [
        "wss://tracker.openwebtorrent.com",
        "wss://tracker.btorrent.xyz",
        "wss://tracker.fastcast.nz"
      ]
    }, (i) => {
      const c = i.files.find(
        (e) => e.name.endsWith(".mp4") || e.name.endsWith(".webm") || e.name.endsWith(".mkv")
      );
      if (!c) throw new Error("No video file found");
      c.renderTo(a, {
        autoplay: !0,
        muted: !1,
        controls: !0,
        errorCallback: (e) => {
          console.error("Error rendering:", e);
        }
      }), i.on("download", () => {
        const e = (i.progress * 100).toFixed(1);
        r.textContent = `Downloading: ${e}%`;
      }), i.on("done", () => {
        r.textContent = "Download complete!";
      });
    });
  } catch (n) {
    throw n;
  }
}
async function w() {
  o && (o.destroy(), o = new WebTorrent());
}
export {
  d as initTorrentPlayer,
  l as startDownload,
  w as stopDownload
};
