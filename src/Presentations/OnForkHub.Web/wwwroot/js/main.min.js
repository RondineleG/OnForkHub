let o = null;
async function l(r) {
  try {
    o = new WebTorrent(), r.textContent = "WebTorrent initialized successfully";
  } catch (t) {
    throw console.error("Error initializing WebTorrent:", t), t;
  }
}
async function w(r, t, d) {
  try {
    const n = document.querySelector(t);
    if (!n)
      throw new Error("Video container not found");
    if (!o)
      throw new Error("WebTorrent not initialized");
    n.innerHTML = "";
    const i = document.createElement("video");
    i.controls = !0, i.className = "w-100 h-100", n.appendChild(i), o.add(d, {
      announce: [
        "wss://tracker.openwebtorrent.com",
        "wss://tracker.btorrent.xyz",
        "wss://tracker.fastcast.nz"
      ]
    }, (a) => {
      const c = a.files.find(
        (e) => e.name.endsWith(".mp4") || e.name.endsWith(".webm") || e.name.endsWith(".mkv")
      );
      if (!c)
        throw new Error("No video file found in torrent");
      c.getBlobURL((e, s) => {
        if (e) throw e;
        if (!s) throw new Error("Failed to get video URL");
        i.src = s;
      }), a.on("download", () => {
        const e = (a.progress * 100).toFixed(1);
        r.textContent = `Downloading: ${e}%`, r.className = "alert alert-info";
      });
    });
  } catch (n) {
    throw console.error("Error starting download:", n), n;
  }
}
async function f() {
  o && o.destroy(() => {
    o = new WebTorrent();
  });
}
export {
  l as initTorrentPlayer,
  w as startDownload,
  f as stopDownload
};
