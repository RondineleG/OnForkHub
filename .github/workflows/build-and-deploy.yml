name: Build and Deploy to VPS

on:
 workflow_dispatch:
   inputs:
     branch:
       description: 'Branch to deploy'
       required: true
       default: 'dev'
       type: choice
       options:
         - dev
         - main
 push:
   branches:
     - dev
     - main
env:
 REGISTRY: ghcr.io
 API_IMAGE_NAME: onforkhub-api
 WEB_IMAGE_NAME: onforkhub-web
 DOCKER_BUILDKIT: 1

jobs:
 build:
   runs-on: ubuntu-latest
   permissions:
     contents: read
     packages: write

   steps:
     - uses: actions/checkout@v4
       with:
         ref: ${{ github.event.inputs.branch || 'dev' }}

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3

     - name: Login to GitHub Container Registry
       uses: docker/login-action@v3
       with:
         registry: ${{ env.REGISTRY }}
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}

     - name: Set lowercase repository owner
       run: |
         echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

     - name: Build and push API image
       uses: docker/build-push-action@v5
       with:
         context: .
         file: .docker/Dockerfile.OnForkHub.Api
         push: true
         tags: |
           ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.API_IMAGE_NAME }}:${{ github.sha }}
           ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.API_IMAGE_NAME }}:latest
         cache-from: type=gha
         cache-to: type=gha,mode=max

     - name: Build and push Web image
       uses: docker/build-push-action@v5
       with:
         context: .
         file: .docker/Dockerfile.OnForkHub.Web
         push: true
         tags: |
           ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.WEB_IMAGE_NAME }}:${{ github.sha }}
           ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.WEB_IMAGE_NAME }}:latest
         cache-from: type=gha
         cache-to: type=gha,mode=max

 deploy:
   needs: build
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
       with:
         ref: ${{ github.event.inputs.branch || 'dev' }}

     - name: Install SSH Key
       run: |
         mkdir -p ~/.ssh
         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
         chmod 600 ~/.ssh/deploy_key
         ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

     - name: Copy Files to VPS
       env:
         SSH_USER: ${{ secrets.SSH_USERNAME }}
         SSH_HOST: ${{ secrets.SSH_HOST }}
       run: |
         ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "mkdir -p ~/onforkhub-deploy"
         scp -i ~/.ssh/deploy_key -r .deploy/* $SSH_USER@$SSH_HOST:~/onforkhub-deploy/

     - name: Deploy Services
       env:
         SSH_USER: ${{ secrets.SSH_USERNAME }}
         SSH_HOST: ${{ secrets.SSH_HOST }}
       run: |
         ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "
           cd ~/onforkhub-deploy &&
           chmod +x *.sh &&
           ./cleanup-services.sh &&
           ./start-services.sh '${{ secrets.GITHUB_TOKEN }}' '${{ github.actor }}'
         "

     - name: Verify Deployment
       if: success()
       env:
         SSH_USER: ${{ secrets.SSH_USERNAME }}
         SSH_HOST: ${{ secrets.SSH_HOST }}
       run: |
         ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "
           cd ~/onforkhub-deploy &&
           echo 'Container Status:' &&
           docker ps &&
           echo 'API Logs:' &&
           docker logs onforkhub-api --tail 10 &&
           echo 'Web Logs:' &&
           docker logs onforkhub-web --tail 10 &&
           echo 'Proxy Logs:' &&
           docker logs reverse-proxy --tail 10
         "
