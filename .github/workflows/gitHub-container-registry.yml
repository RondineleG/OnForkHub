name: Build and Deploy Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - dev
    paths:
      - 'src/Presentations/OnForkHub.Api/**'
      - 'src/Presentations/OnForkHub.Web/**'
      - 'docker-compose.yml'
      - '.github/workflows/**'

env:
  REGISTRY: ghcr.io
  API_IMAGE_NAME: onforkhub-api
  WEB_IMAGE_NAME: onforkhub-web
  DOCKER_BUILDKIT: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set lowercase repository owner
      - name: Set lowercase repository owner
        run: |
          echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Build and push API image
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .docker/Dockerfile.OnForkHub.Api
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.API_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.API_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Web image
      - name: Build and push Web image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .docker/Dockerfile.OnForkHub.Web
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.WEB_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.WEB_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Set up SSH authentication
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Deploy to remote server
      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            mkdir -p ~/onforkhub-deploy/logs
            cd ~/onforkhub-deploy
            docker compose down --remove-orphans || true
            find . -maxdepth 1 ! -name 'logs' ! -name '.' ! -name '..' -exec rm -rf {} +
            echo '${{ secrets.DOCKER_PASSWORD }}' | docker login ghcr.io -u RondineleG --password-stdin
            docker compose up -d
          "
