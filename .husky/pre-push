#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
PROTECTED_BRANCHES="^(main|dev)$"
ALLOWED_SOURCE_BRANCHES="^(feature|bugfix|hotfix)/"

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
RESET=$(tput sgr0)

is_cherry_pick() {
    git log -1 --pretty=%B | grep -q "cherry picked from commit"
}

is_from_allowed_branch() {
    ORIGINAL_COMMIT=$(git log -1 --pretty=%B | grep "cherry picked from commit" | grep -o '[a-f0-9]\{40\}')
    if [ -z "$ORIGINAL_COMMIT" ]; then
        return 1
    fi
    
    ORIGINAL_BRANCH=$(git name-rev --name-only $ORIGINAL_COMMIT 2>/dev/null)
    if [[ $ORIGINAL_BRANCH =~ $ALLOWED_SOURCE_BRANCHES ]]; then
        return 0
    fi
    return 1
}

if [[ $BRANCH_NAME == "uat" ]]; then
    echo "üîç Checking push to UAT..."
    
    if ! is_cherry_pick; then
        echo "${RED}‚ùå Only cherry-picks are allowed on UAT branch!${RESET}"
        echo "${YELLOW}‚ÑπÔ∏è  Please:${RESET}"
        echo "1. Use cherry-pick from a feature/*, bugfix/*, or hotfix/* branch"
        echo "2. Direct commits and merges are not allowed"
        exit 1
    fi
    
    if ! is_from_allowed_branch; then
        echo "${RED}‚ùå Cherry-pick must come from a feature/*, bugfix/*, or hotfix/* branch${RESET}"
        echo "${YELLOW}‚ÑπÔ∏è  Current branch source is not allowed${RESET}"
        exit 1
    fi
fi

if [[ $BRANCH_NAME =~ $PROTECTED_BRANCHES ]]; then
    echo "${RED}‚ùå Direct push to $BRANCH_NAME branch is not allowed!${RESET}"
    echo "${YELLOW}‚ÑπÔ∏è  Please:${RESET}"
    echo "1. Create a feature/* or hotfix/* branch"
    echo "2. Push to this branch"
    echo "3. Create a Pull Request"
    exit 1
fi

echo "${GREEN}‚úÖ Hook checks completed successfully!${RESET}"

echo "üß™ Running unit tests..."
dotnet test --no-restore --logger "console;verbosity=normal"
TEST_RESULT=$?

if [ $TEST_RESULT -eq 0 ]; then
    echo "${GREEN}‚úÖ Tests completed successfully!${RESET}"
    exit 0
else
    echo "${RED}‚ùå Tests failed!${RESET}"
    exit 1
fi
